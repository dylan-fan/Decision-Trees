#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include "dec.oh"
#include "dec.h"
#include "obliv.h"
char matrix[][];
void oblivDec(void *args)
{

	ProtocolIO *dec = (ProtocolIO*)args;

	printf("beginning obig initiation...\n");
	int i=0; int j=0;

	/*obig oa;
	obig_init(&oa, 16);
	obig ob;
	obig_init(&ob, 16);
	obig oc;
	obig_init(&oc, 64);*/
	FILE *f1;
	FILE *f2;
	printf("obig initiation successful.\n");
	//byte buf[4096]={};
	size_t len = 0;
char line[256];
	char *n1 = feedOblivInt(dec->filename, 1);
	char *n2 = feedOblivInt(dec->filename, 2);
	//obliv int n3 = 0;
	f1= fopen(n1, "r");
	f2= fopen(n2, "r");
while (fgets(line, sizeof(line), f1)) {
	char * l = strtok(strdup(line), ",");
		while(l) {
			matrix[i][j]= strcpy(l);
   			l  = strtok(NULL, ",");
   			j++;
		}
		i++;
    }
	/*while ((read = getline(&buf, &len, f1)) != -1) {
        char * line = strtok(strdup(buf), ",");
		while(line) {
			matrix[i][j]= strcpy(line);
   			line  = strtok(NULL, ",");
   			j++;
		}
		i++;
    }*/

    j=0;
    /*while ((read = getline(&buf, &len, f2)) != -1) {
        char * line = strtok(strdup(buf), ",");
        while(line) {
            matrix[i][j]= strcpy(line);
            line  = strtok(NULL, ",");
            j++;
        }
        i++;
    }*/
	printf("obliv feed successful\n");

	//obig_import_onative(&oa, n1);
	//obig_import_onative(&ob, n2);
	//obig_import_onative(&oc, n3);

	printf("obig import successful\n");

//	obig_mul(&oc, oa, ob);
//	tr(rows, columns, filename);

	printf("oblivious decision tree successful\n");

	//obliv int answer = obig_export_onative(oc);
	obliv int answer;
	printf("obig export successful\n");

 	revealOblivInt(&dec->result, answer, 0);

	printf("Reveal successful %d\n", dec->result);

}
